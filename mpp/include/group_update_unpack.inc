!***********************************************************************
!*                             Apache License 2.0
!*
!* This file is part of the GFDL Flexible Modeling System (FMS).
!*
!* Licensed under the Apache License, Version 2.0 (the "License");
!* you may not use this file except in compliance with the License.
!* You may obtain a copy of the License at
!*
!*     http://www.apache.org/licenses/LICENSE-2.0
!*
!* FMS is distributed in the hope that it will be useful, but WITHOUT
!* WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied;
!* without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
!* PARTICULAR PURPOSE. See the License for the specific language
!* governing permissions and limitations under the License.
!***********************************************************************

if( group%k_loop_inside ) then
!$OMP parallel do default(none) &
!$OMP shared(nunpack,group,nscalar,buffer,nvector,ksize,buffer_start_pos,shape_f,shape_x,shape_y) &
!$OMP                          private(buffer_pos,pos,m,is, ie, js, je,rotation, &
!$OMP                                  field, fieldx, fieldy, tmpptr, n,k )
  do n = nunpack, 1, -1
     buffer_pos = group%unpack_buffer_pos(n) + buffer_start_pos
     pos = buffer_pos
     is = group%unpack_is(n); ie = group%unpack_ie(n)
     js = group%unpack_js(n); je = group%unpack_je(n)
     if( group%unpack_type(n) == FIELD_S ) then
        do l=1,nscalar  ! loop over number of fields
           call c_f_pointer(group%addrs_s(l), tmpptr, shape=shape_f)
           field(group%is_s:group%ie_s,group%js_s:group%je_s, 1:group%ksize_s) => tmpptr
           do k = 1, ksize
              do j = js, je
                 do i = is, ie
                    pos = pos + 1
                    field(i,j,k) = buffer(pos)
                 end do
              end do
           end do
        end do
     else if( group%unpack_type(n) == FIELD_X ) then
        do l=1,nvector  ! loop over number of fields
           call c_f_pointer(group%addrs_x(l), tmpptr, shape=shape_x)
           fieldx(group%is_x:group%ie_x,group%js_x:group%je_x,1:group%ksize_v) => tmpptr
           do k = 1, ksize
              do j = js, je
                 do i = is, ie
                    pos = pos + 1
                    fieldx(i,j,k) = buffer(pos)
                 end do
              end do
           end do
        end do
     else if( group%unpack_type(n) == FIELD_Y ) then
        do l=1,nvector  ! loop over number of fields
           call c_f_pointer(group%addrs_y(l), tmpptr, shape=shape_y)
           fieldy(group%is_y:group%ie_y,group%js_y:group%je_y,1:group%ksize_v) => tmpptr
           do k = 1, ksize
              do j = js, je
                 do i = is, ie
                    pos = pos + 1
                    fieldy(i,j,k) = buffer(pos)
                 end do
              end do
           end do
        end do
     endif
  enddo
else
!$OMP parallel do default(none) &
!$OMP shared(nunpack,group,nscalar,buffer,nvector,ksize,buffer_start_pos,shape_f,shape_x,shape_y) &
!$OMP                          private(buffer_pos,pos,m,is, ie, js, je,rotation, &
!$OMP                                  field, fieldx, fieldy, tmpptr,n,k)
  do nk = nunpack*ksize, 1, -1
     n = (nk-1)/ksize + 1
     k = mod((nk-1), ksize) + 1
     buffer_pos = group%unpack_buffer_pos(n) + buffer_start_pos
     pos = buffer_pos + (k-1)*group%unpack_size(n)
     is = group%unpack_is(n); ie = group%unpack_ie(n)
     js = group%unpack_js(n); je = group%unpack_je(n)
     if( group%unpack_type(n) == FIELD_S ) then
        do l=1,nscalar  ! loop over number of fields
           call c_f_pointer(group%addrs_s(l), tmpptr, shape=shape_f)
           field(group%is_s:group%ie_s,group%js_s:group%je_s, 1:group%ksize_s) => tmpptr
           do j = js, je
              do i = is, ie
                 pos = pos + 1
                 field(i,j,k) = buffer(pos)
              end do
           end do
        end do
     else if( group%unpack_type(n) == FIELD_X ) then
        do l=1,nvector  ! loop over number of fields
           call c_f_pointer(group%addrs_x(l), tmpptr, shape=shape_x)
           fieldx(group%is_x:group%ie_x,group%js_x:group%je_x,1:group%ksize_v) => tmpptr
           do j = js, je
              do i = is, ie
                 pos = pos + 1
                 fieldx(i,j,k) = buffer(pos)
              end do
           end do
        end do
     else if( group%unpack_type(n) == FIELD_Y ) then
        do l=1,nvector  ! loop over number of fields
           call c_f_pointer(group%addrs_y(l), tmpptr, shape=shape_y)
           fieldy(group%is_y:group%ie_y,group%js_y:group%je_y,1:group%ksize_v) => tmpptr
           do j = js, je
              do i = is, ie
                 pos = pos + 1
                 fieldy(i,j,k) = buffer(pos)
              end do
           end do
        end do
     endif
  enddo
endif
